syntax = "proto3";

package node;

// Definición del servicio de Node
service NodeService {
    // Método para enviar mensajes entre nodos
    rpc SendMessage(CancionRequest) returns (MessageResponse);

    // Método para encontrar el sucesor de un nodo en la red
    rpc FindSuccessor (NodeIDRequest) returns (SuccessorResponse);

    // Métodos para actualizar el predecesor y el sucesor de un nodo (Join)
    rpc UpdatePredecessor (UpdateRequest) returns (EmptyResponse);
    rpc UpdateSuccessor (UpdateRequest) returns (EmptyResponse);
    rpc BuscarResponsabilidades (ResponsabilidadesRequest) returns (ResponsabilidadesResponse);

    // RPC para buscar una canción en la red
    rpc BuscarCancion (BuscarCancionRequest) returns (BuscarCancionResponse);
}


message CancionRequest {
    string cancion = 1;          // Nombre de la canción
    int32 tamano_cancion = 2;    // Tamaño de la canción en MBps
}

message MessageResponse {
    string reply = 1;            // Mensaje de respuesta
}

// Mensaje de solicitud para obtener el ID de un nodo
message NodeIDRequest {
    int32 id = 1;  // Define el campo id como string (puedes mantenerlo como int32 si prefieres)
}


// Respuesta que contiene la información del sucesor y predecesor
message SuccessorResponse {
    string successor_address = 1;  // Dirección del nodo sucesor
    string predecessor_address = 2; // Dirección del nodo predecesor
}

// Solicitud para actualizar el sucesor o predecesor de un nodo
message UpdateRequest {
    string new_predecessor_address = 1;  // Nueva dirección del predecesor
    string new_successor_address = 2;    // Nueva dirección del sucesor
}

// Respuesta vacía (utilizada para métodos de actualización)
message EmptyResponse {}

message ResponsabilidadesRequest {
    int32 id = 1;  // ID del nodo solicitante
}


message ResponsabilidadesResponse {
    map<int32, string> items = 1;  // Diccionario con hash de canción como clave y un nombre de cancion
}

// Mensaje para buscar una canción en la red
message BuscarCancionRequest {
    string cancion = 1;       // El nombre de la canción a buscar
    int32 requester_id = 2;   // ID del nodo que inició la búsqueda
}

// Respuesta al buscar una canción
message BuscarCancionResponse {
    string cancion = 1;        // El nombre de la canción encontrada (vacío si no se encuentra)
    int32 id_nodo = 3;         // ID del nodo que tiene la canción, -1 si no se encuentra
}
